@page "/"
@using SignalRDemo.Models
@using SignalRDemo.Services
@rendermode InteractiveServer
@inject SongService SongService
@inject SungByService SungByService
@inject SingerService SingerService

<h3>Song List</h3>

<table class="table">
    <thead>
        <tr>
            <th>Action</th>
            <th>Song</th>
            <th>Release Date</th>
            <th>Singer Count</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var song in songs)
        {
            <tr>
                <td>
                    <button class="btn btn-primary" @onclick="() => EditSong(song)">Edit</button>
                    <button class="btn btn-danger" @onclick="() => DeleteSong(song)">Delete</button>
                </td>
                <td>@song.SongName</td>
                <td>@song.ReleaseDate.ToShortDateString()</td>
                <td>@sungByList.Where(x => x.SongId == song.SongId).Count()</td>
            </tr>
        }
    </tbody>
</table>

<button class="btn btn-success" @onclick="ShowAddModal">Add Song</button>

@if (showModal)
{
    <div class="modal show" style="display: block; background: rgba(0, 0, 0, 0.5); position: fixed; top: 0; bottom: 0; left: 0; right: 0; z-index: 1050;">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@modalTitle</h5>
                    <button type="button" class="close btn" aria-label="Close" @onclick="HideModal">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="songName">Song Name</label>
                        <input type="text" class="form-control" id="songName" @bind="newSong.SongName" />
                    </div>
                    <div class="form-group">
                        <label for="releaseDate">Release Date</label>
                        <input type="date" class="form-control" id="releaseDate" @bind="newSong.ReleaseDate" />
                    </div>
                    <div class="form-group">
                        <label for="singers">Singers</label>
                        <select class="form-control" id="singers" @bind="selectedSinger">
                            @foreach (var singer in singers)
                            {
                                <option value="@singer.SingerId">@singer.Name</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="SaveSong">Save</button>
                    <button type="button" class="btn btn-secondary" @onclick="HideModal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    List<Song> songs = new List<Song>();
    List<Singer> singers = new List<Singer>();
    List<SungBy> sungByList = new List<SungBy>();
    int selectedSinger;
    Song newSong = new Song();
    SungBy sungBy = new SungBy();
    bool showModal = false;
    string modalTitle = "";

    protected override void OnInitialized()
    {
        songs = SongService.GetAllSongs();
        singers = SingerService.GetAllSingers();
        sungByList = SungByService.GetAllSungBys();
    }

    void ShowAddModal()
    {
        modalTitle = "Add Song";
        newSong = new Song();
        showModal = true;
    }

    void EditSong(Song song)
    {
        modalTitle = "Edit Song";
        newSong = song;
        showModal = true;
    }

    void DeleteSong(Song song)
    {
        SongService.DeleteSong(song.SongId);
    }

    void HideModal()
    {
        showModal = false;
    }

    void SaveSong()
    {
        if (newSong.SongId == 0)
        {
            SongService.CreateSong(newSong);
            sungBy.SongId = newSong.SongId;
            sungBy.SingerId = selectedSinger;
            SungByService.CreateSungBy(sungBy);
        }
        else
        {
            SongService.UpdateSong(newSong);
        }

        HideModal();
    }
}
